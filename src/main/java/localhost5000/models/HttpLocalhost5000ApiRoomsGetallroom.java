/*
 * BajajHotelManagementLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost5000.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for HttpLocalhost5000ApiRoomsGetallroom type.
 */
public class HttpLocalhost5000ApiRoomsGetallroom {
    private String id;
    private String name;
    private String description;
    private List<Currentbooking> currentbookings;
    private List<String> imageurls;
    private int maxcount;
    private long phonenumber;
    private int rentperday;
    private String type;
    private int v;

    /**
     * Default constructor.
     */
    public HttpLocalhost5000ApiRoomsGetallroom() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  name  String value for name.
     * @param  description  String value for description.
     * @param  currentbookings  List of Currentbooking value for currentbookings.
     * @param  imageurls  List of String value for imageurls.
     * @param  maxcount  int value for maxcount.
     * @param  phonenumber  long value for phonenumber.
     * @param  rentperday  int value for rentperday.
     * @param  type  String value for type.
     * @param  v  int value for v.
     */
    public HttpLocalhost5000ApiRoomsGetallroom(
            String id,
            String name,
            String description,
            List<Currentbooking> currentbookings,
            List<String> imageurls,
            int maxcount,
            long phonenumber,
            int rentperday,
            String type,
            int v) {
        this.id = id;
        this.name = name;
        this.description = description;
        this.currentbookings = currentbookings;
        this.imageurls = imageurls;
        this.maxcount = maxcount;
        this.phonenumber = phonenumber;
        this.rentperday = rentperday;
        this.type = type;
        this.v = v;
    }

    /**
     * Getter for Id.
     * @return Returns the String
     */
    @JsonGetter("_id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for String
     */
    @JsonSetter("_id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Description.
     * @return Returns the String
     */
    @JsonGetter("description")
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Currentbookings.
     * @return Returns the List of Currentbooking
     */
    @JsonGetter("currentbookings")
    public List<Currentbooking> getCurrentbookings() {
        return currentbookings;
    }

    /**
     * Setter for Currentbookings.
     * @param currentbookings Value for List of Currentbooking
     */
    @JsonSetter("currentbookings")
    public void setCurrentbookings(List<Currentbooking> currentbookings) {
        this.currentbookings = currentbookings;
    }

    /**
     * Getter for Imageurls.
     * @return Returns the List of String
     */
    @JsonGetter("imageurls")
    public List<String> getImageurls() {
        return imageurls;
    }

    /**
     * Setter for Imageurls.
     * @param imageurls Value for List of String
     */
    @JsonSetter("imageurls")
    public void setImageurls(List<String> imageurls) {
        this.imageurls = imageurls;
    }

    /**
     * Getter for Maxcount.
     * @return Returns the int
     */
    @JsonGetter("maxcount")
    public int getMaxcount() {
        return maxcount;
    }

    /**
     * Setter for Maxcount.
     * @param maxcount Value for int
     */
    @JsonSetter("maxcount")
    public void setMaxcount(int maxcount) {
        this.maxcount = maxcount;
    }

    /**
     * Getter for Phonenumber.
     * @return Returns the long
     */
    @JsonGetter("phonenumber")
    public long getPhonenumber() {
        return phonenumber;
    }

    /**
     * Setter for Phonenumber.
     * @param phonenumber Value for long
     */
    @JsonSetter("phonenumber")
    public void setPhonenumber(long phonenumber) {
        this.phonenumber = phonenumber;
    }

    /**
     * Getter for Rentperday.
     * @return Returns the int
     */
    @JsonGetter("rentperday")
    public int getRentperday() {
        return rentperday;
    }

    /**
     * Setter for Rentperday.
     * @param rentperday Value for int
     */
    @JsonSetter("rentperday")
    public void setRentperday(int rentperday) {
        this.rentperday = rentperday;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for V.
     * @return Returns the int
     */
    @JsonGetter("__v")
    public int getV() {
        return v;
    }

    /**
     * Setter for V.
     * @param v Value for int
     */
    @JsonSetter("__v")
    public void setV(int v) {
        this.v = v;
    }

    /**
     * Converts this HttpLocalhost5000ApiRoomsGetallroom into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "HttpLocalhost5000ApiRoomsGetallroom [" + "id=" + id + ", name=" + name
                + ", description=" + description + ", currentbookings=" + currentbookings
                + ", imageurls=" + imageurls + ", maxcount=" + maxcount + ", phonenumber="
                + phonenumber + ", rentperday=" + rentperday + ", type=" + type + ", v=" + v + "]";
    }

    /**
     * Builds a new {@link HttpLocalhost5000ApiRoomsGetallroom.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link HttpLocalhost5000ApiRoomsGetallroom.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, name, description, currentbookings, imageurls, maxcount,
                phonenumber, rentperday, type, v);
        return builder;
    }

    /**
     * Class to build instances of {@link HttpLocalhost5000ApiRoomsGetallroom}.
     */
    public static class Builder {
        private String id;
        private String name;
        private String description;
        private List<Currentbooking> currentbookings;
        private List<String> imageurls;
        private int maxcount;
        private long phonenumber;
        private int rentperday;
        private String type;
        private int v;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  String value for id.
         * @param  name  String value for name.
         * @param  description  String value for description.
         * @param  currentbookings  List of Currentbooking value for currentbookings.
         * @param  imageurls  List of String value for imageurls.
         * @param  maxcount  int value for maxcount.
         * @param  phonenumber  long value for phonenumber.
         * @param  rentperday  int value for rentperday.
         * @param  type  String value for type.
         * @param  v  int value for v.
         */
        public Builder(String id, String name, String description,
                List<Currentbooking> currentbookings, List<String> imageurls, int maxcount,
                long phonenumber, int rentperday, String type, int v) {
            this.id = id;
            this.name = name;
            this.description = description;
            this.currentbookings = currentbookings;
            this.imageurls = imageurls;
            this.maxcount = maxcount;
            this.phonenumber = phonenumber;
            this.rentperday = rentperday;
            this.type = type;
            this.v = v;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for currentbookings.
         * @param  currentbookings  List of Currentbooking value for currentbookings.
         * @return Builder
         */
        public Builder currentbookings(List<Currentbooking> currentbookings) {
            this.currentbookings = currentbookings;
            return this;
        }

        /**
         * Setter for imageurls.
         * @param  imageurls  List of String value for imageurls.
         * @return Builder
         */
        public Builder imageurls(List<String> imageurls) {
            this.imageurls = imageurls;
            return this;
        }

        /**
         * Setter for maxcount.
         * @param  maxcount  int value for maxcount.
         * @return Builder
         */
        public Builder maxcount(int maxcount) {
            this.maxcount = maxcount;
            return this;
        }

        /**
         * Setter for phonenumber.
         * @param  phonenumber  long value for phonenumber.
         * @return Builder
         */
        public Builder phonenumber(long phonenumber) {
            this.phonenumber = phonenumber;
            return this;
        }

        /**
         * Setter for rentperday.
         * @param  rentperday  int value for rentperday.
         * @return Builder
         */
        public Builder rentperday(int rentperday) {
            this.rentperday = rentperday;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for v.
         * @param  v  int value for v.
         * @return Builder
         */
        public Builder v(int v) {
            this.v = v;
            return this;
        }

        /**
         * Builds a new {@link HttpLocalhost5000ApiRoomsGetallroom} object using the set fields.
         * @return {@link HttpLocalhost5000ApiRoomsGetallroom}
         */
        public HttpLocalhost5000ApiRoomsGetallroom build() {
            return new HttpLocalhost5000ApiRoomsGetallroom(id, name, description, currentbookings,
                    imageurls, maxcount, phonenumber, rentperday, type, v);
        }
    }
}
