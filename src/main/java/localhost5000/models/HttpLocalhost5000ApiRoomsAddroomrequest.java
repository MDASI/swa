/*
 * BajajHotelManagementLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost5000.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for HttpLocalhost5000ApiRoomsAddroomrequest type.
 */
public class HttpLocalhost5000ApiRoomsAddroomrequest {
    private String room;
    private String description;
    private List<String> imageurls;
    private int maxcount;
    private long phonenumber;
    private int rentperday;
    private String type;

    /**
     * Default constructor.
     */
    public HttpLocalhost5000ApiRoomsAddroomrequest() {
    }

    /**
     * Initialization constructor.
     * @param  room  String value for room.
     * @param  description  String value for description.
     * @param  imageurls  List of String value for imageurls.
     * @param  maxcount  int value for maxcount.
     * @param  phonenumber  long value for phonenumber.
     * @param  rentperday  int value for rentperday.
     * @param  type  String value for type.
     */
    public HttpLocalhost5000ApiRoomsAddroomrequest(
            String room,
            String description,
            List<String> imageurls,
            int maxcount,
            long phonenumber,
            int rentperday,
            String type) {
        this.room = room;
        this.description = description;
        this.imageurls = imageurls;
        this.maxcount = maxcount;
        this.phonenumber = phonenumber;
        this.rentperday = rentperday;
        this.type = type;
    }

    /**
     * Getter for Room.
     * @return Returns the String
     */
    @JsonGetter("room")
    public String getRoom() {
        return room;
    }

    /**
     * Setter for Room.
     * @param room Value for String
     */
    @JsonSetter("room")
    public void setRoom(String room) {
        this.room = room;
    }

    /**
     * Getter for Description.
     * @return Returns the String
     */
    @JsonGetter("description")
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Imageurls.
     * @return Returns the List of String
     */
    @JsonGetter("imageurls")
    public List<String> getImageurls() {
        return imageurls;
    }

    /**
     * Setter for Imageurls.
     * @param imageurls Value for List of String
     */
    @JsonSetter("imageurls")
    public void setImageurls(List<String> imageurls) {
        this.imageurls = imageurls;
    }

    /**
     * Getter for Maxcount.
     * @return Returns the int
     */
    @JsonGetter("maxcount")
    public int getMaxcount() {
        return maxcount;
    }

    /**
     * Setter for Maxcount.
     * @param maxcount Value for int
     */
    @JsonSetter("maxcount")
    public void setMaxcount(int maxcount) {
        this.maxcount = maxcount;
    }

    /**
     * Getter for Phonenumber.
     * @return Returns the long
     */
    @JsonGetter("phonenumber")
    public long getPhonenumber() {
        return phonenumber;
    }

    /**
     * Setter for Phonenumber.
     * @param phonenumber Value for long
     */
    @JsonSetter("phonenumber")
    public void setPhonenumber(long phonenumber) {
        this.phonenumber = phonenumber;
    }

    /**
     * Getter for Rentperday.
     * @return Returns the int
     */
    @JsonGetter("rentperday")
    public int getRentperday() {
        return rentperday;
    }

    /**
     * Setter for Rentperday.
     * @param rentperday Value for int
     */
    @JsonSetter("rentperday")
    public void setRentperday(int rentperday) {
        this.rentperday = rentperday;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Converts this HttpLocalhost5000ApiRoomsAddroomrequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "HttpLocalhost5000ApiRoomsAddroomrequest [" + "room=" + room + ", description="
                + description + ", imageurls=" + imageurls + ", maxcount=" + maxcount
                + ", phonenumber=" + phonenumber + ", rentperday=" + rentperday + ", type=" + type
                + "]";
    }

    /**
     * Builds a new {@link HttpLocalhost5000ApiRoomsAddroomrequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link HttpLocalhost5000ApiRoomsAddroomrequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(room, description, imageurls, maxcount, phonenumber,
                rentperday, type);
        return builder;
    }

    /**
     * Class to build instances of {@link HttpLocalhost5000ApiRoomsAddroomrequest}.
     */
    public static class Builder {
        private String room;
        private String description;
        private List<String> imageurls;
        private int maxcount;
        private long phonenumber;
        private int rentperday;
        private String type;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  room  String value for room.
         * @param  description  String value for description.
         * @param  imageurls  List of String value for imageurls.
         * @param  maxcount  int value for maxcount.
         * @param  phonenumber  long value for phonenumber.
         * @param  rentperday  int value for rentperday.
         * @param  type  String value for type.
         */
        public Builder(String room, String description, List<String> imageurls, int maxcount,
                long phonenumber, int rentperday, String type) {
            this.room = room;
            this.description = description;
            this.imageurls = imageurls;
            this.maxcount = maxcount;
            this.phonenumber = phonenumber;
            this.rentperday = rentperday;
            this.type = type;
        }

        /**
         * Setter for room.
         * @param  room  String value for room.
         * @return Builder
         */
        public Builder room(String room) {
            this.room = room;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for imageurls.
         * @param  imageurls  List of String value for imageurls.
         * @return Builder
         */
        public Builder imageurls(List<String> imageurls) {
            this.imageurls = imageurls;
            return this;
        }

        /**
         * Setter for maxcount.
         * @param  maxcount  int value for maxcount.
         * @return Builder
         */
        public Builder maxcount(int maxcount) {
            this.maxcount = maxcount;
            return this;
        }

        /**
         * Setter for phonenumber.
         * @param  phonenumber  long value for phonenumber.
         * @return Builder
         */
        public Builder phonenumber(long phonenumber) {
            this.phonenumber = phonenumber;
            return this;
        }

        /**
         * Setter for rentperday.
         * @param  rentperday  int value for rentperday.
         * @return Builder
         */
        public Builder rentperday(int rentperday) {
            this.rentperday = rentperday;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Builds a new {@link HttpLocalhost5000ApiRoomsAddroomrequest} object using the set fields.
         * @return {@link HttpLocalhost5000ApiRoomsAddroomrequest}
         */
        public HttpLocalhost5000ApiRoomsAddroomrequest build() {
            return new HttpLocalhost5000ApiRoomsAddroomrequest(room, description, imageurls,
                    maxcount, phonenumber, rentperday, type);
        }
    }
}
